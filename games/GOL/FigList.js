function FigList(id,rot) {
  var TablFig;
  TblFig = []; // Réinitialisation

  switch (id) { //Définis la figure choisie en fonction de sont "id".
// Les figures sont sous formes de tableau de coordonnées [X,Y,Couleur]. Le X=0 et Y=0 étant le centre de la figure.

// Numbers for menu

    case 0: // Vide
    TblFig = [[-1,-2],[0,-2],[+1,-2],[-1,-1],[+1,-1],[-1,0],[+1,0],[-1,+1],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;
    

    case 1: //1
    TblFig = [[-1,-2],[0,-2],[0,-1],[0,0],[0,+1],[0,+2]];
    break;

    case 2: //2
    TblFig = [[-1,-2],[0,-2],[+1,-2],[+1,-1],[-1,0],[0,0],[+1,0],[-1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 3: //3
    TblFig = [[-1,-2],[0,-2],[+1,-2],[+1,-1],[-1,0],[0,0],[+1,0],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 4: //4
    TblFig = [[-1,-2],[+1,-2],[-1,-1],[+1,-1],[-1,0],[0,0],[+1,0],[+1,+1],[+1,+2]];
    break;

    case 5: //5
    TblFig = [[-1,-2],[0,-2],[+1,-2],[-1,-1],[-1,0],[0,0],[+1,0],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 6: //6
    TblFig = [[-1,-2],[0,-2],[+1,-2],[-1,-1],[-1,0],[0,0],[+1,0],[-1,+1],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 7: //7
    TblFig = [[-1,-2],[0,-2],[+1,-2],[+1,-1],[+1,0],[+1,+1],[+1,+2]];
    break;

    case 8: //8
    TblFig = [[-1,-2],[0,-2],[+1,-2],[-1,-1],[+1,-1],[-1,0],[0,0],[+1,0],[-1,+1],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 9: //9
    TblFig = [[-1,-2],[0,-2],[+1,-2],[-1,-1],[+1,-1],[-1,0],[0,0],[+1,0],[+1,+1],[-1,+2],[0,+2],[+1,+2]];
    break;

    case 10: // 0
    TblFig = [];
    break;



// Symbol for menu

    case 11: // Plus
    TblFig = [[0,0],[0,1],[0,2],[0,-1],[0,-2],[1,0],[2,0],[-1,0],[-2,0]] ;
    break;

    case 12: // Moins
    TblFig = [[0,0],[1,0],[2,0],[-1,0],[-2,0]] ;
    break;

    case 13 : // Arrow On
    TblFig = [[0,0],[-1,+1],[-2,+2],[+1,-1],[+2,-2],[+3,-3],[+3,-2],[+3,-1],[+3,0],[0,0],[+3,+1],[+3,+2],[+3,+3],[+2,+3],[+1,+3],[0,+3],[-1,+3],[-2,+3],[-3,+3]];
    break;

    case 14 : // Arrow Off
    TblFig = [[0,0],[1,-1],[+2,-2],[-1,+1],[-2,+2],[-3,+3],[-3,+2],[-3,+1],[-3,0],[0,0],[-3,-1],[-3,-2],[-3,-3],[-2,-3],[-1,-3],[0,-3],[+1,-3],[+2,-3],[+3,-3]];
    break;

    case 15 : // Play
    TblFig = [[-1,-2],[-1,-1],[0,-1],[-1,0],[0,0],[+1,0],[-1,+1],[0,+1],[-1,+2]];
    break;

    case 16 : // Pause
    TblFig = [[-1,-2],[+1,-2],[-1,-1],[+1,-1],[-1,0],[+1,0],[-1,+1],[+1,+1],[-1,+2],[+1,+2]];
    break;

    case 17 : // Step
    TblFig = [[-3,-2],[-3,-1],[-3,-0],[-3,2],  [-2,-2],[-2,-0],[-2,2],  [-1,-2],[-1,-0],[-1,1],[-1,2],  [1,-2],[1,-1],[1,0],[1,1],[1,2],  [2,-1],[2,2],  [3,-1],[3,2]];
    break;

    case 18 : // Reset
    TblFig = [[-3,-2],[-3,-1],[-3,0],[-3,1],[-3,2],  [-2,-2],[-2,0],[-2,1],  [-1,-2],[-1,-1],[-1,0],[-1,2],  [1,2],  [2,0],[2,1],[2,2],  [3,0]];
    break;

    case 19 : // Left
    TblFig = [[1,-2],[1,-1],[0,-1],[1,0],[0,0],[-1,0],[+1,+1],[0,+1],[+1,+2],[+2,0]];
    break;

    case 20 : // Right
    TblFig = [[-1,-2],[-1,-1],[0,-1],[-1,0],[0,0],[+1,0],[-1,+1],[0,+1],[-1,+2],[-2,0]];
    break;

    case 21 : // Turn
    TblFig = [[-3,3],[-2,3],[-1,-1],[-1,3],[0,-2],[0,-1],[0,3],[1,-3],[1,-2],[1,-1],[1,0],[1,1],[1,2],[1,3],[2,-2],[2,-1],[3,-1]];
    break;

    case 22 : // Turn Reversed
    TblFig = [[3,3],[2,3],[1,-1],[1,3],[0,-2],[0,-1],[0,3],[-1,-3],[-1,-2],[-1,-1],[-1,0],[-1,1],[-1,2],[-1,3],[-2,-2],[-2,-1],[-3,-1]];
    break;

    case 23 : // Speed
    TblFig = [[-3,-3],[-3,-2],[-3,-1],[-3,1],  [-2,-3],[-2,-1],[-2,1],  [-1,-3],[-1,-1],[-1,0],[-1,1],  [1,-1],[1,0],[1,1],[1,2],[1,3],  [2,-1],[2,1],  [3,-1],[3,0],[3,1]];
    break;

    case 24 : // Color
    TblFig = [[-3,-2],[-3,-1],[-3,0],[-3,1],[-3,2],  [-2,-2],[-2,2],  [0,-2],[0,-1],[0,0],[0,1],[0,2],  [2,2],[2,1],[2,0],  [3,0]];
    break;

    case 25 : // Color
    TblFig = [[-3,-2],[-3,-1],[-3,0],[-3,1],[-3,2],  [-2,-2],[-2,2],  [-1,-1],[-1,0],[-1,1],   [1,-1],[1,0],[1,1],[1,2],  [2,-2],[2,0],  [3,-2]];
    break;


// Famous forms for the game of life

    case 50 : // Point
    TblFig =  [[0,0]];
    break;

    case 51 : // Honeycomb
    TblFig =  [[-1,0],[0,1],[0,-1],[1,1],[1,-1],[2,0]];
    break;

    case 52 : // Stairs
    TblFig =  [[-1,1],[0,0],[0,1],[1,0],[1,-1],[2,-1]];
    break;

    case 53 : // Clown
    TblFig = [[-1,-1],[-1,0],[-1,+1],[0,-1],[+1,-1],[+1,0],[+1,+1]];
    break;

    case 54 : // Planer
    TblFig = [[+1,-1],[+1,0],[+1,+1],[0,+1],[-1,0]];
    break;

    case 55 : // Tree of chaos
    TblFig = [[0,-1],[0,0],[0,+1],[-1,0],[+1,-1]];
    break;

    case 56 : // Line pulsar
    TblFig = [[-4,0],[-3,0],[-2,0],[-1,0],[0,0],[1,0],[2,0],[3,0],[4,0],[5,0]];
    break;

    case 57 : // Super Pulser
    TblFig = [[-2,-2],[-2,-1],[-2,0],[-2,1],[-2,2],  [0,-2],[0,2],  [2,-2],[2,-1],[2,0],[2,1],[2,2]];
    break;

    case 58 : // Little Spaceship
    TblFig = [[-1,-1],[0,-1],[+1,-1],[+2,-1],[-2,0],[+2,0],[+2,+1],[+1,+2],[-2,+2]];
    break;

    case 59 : // Medium Spaceship
    TblFig = [[-2,-1],[-2,1],  [-1,-2],  [0,-2],[0,2],  [1,-2],  [2,-2],[2,1],  [3,-2],[3,-1],[3,0]];
    break;

    case 60 : // Large Spaceship
    TblFig = [[-3,-1],[-3,1],  [-2,-2],  [-1,-2],[-1,2],   [0,-2],[0,2],  [1,-2],  [2,-2],[2,1],  [3,-2],[3,-1],[3,0]];
    break;

    case 61 : // Planer Canon
    TblFig = [[-18,-1],[-17,-1],[-18,0],[-17,0],  [16,1],[17,1],[16,2],[17,2],  [2,0],[3,0],[2,1],[3,1],[2,2],[3,2],  [4,-1],[4,3],[6,-1],[6,-2],[6,3],[6,4],  [-1,-1],[-2,-2],[-2,-1],[-2,0],[-3,-3],[-3,1],[-4,-1],[-5,-4],[-5,2],[-6,-4],[-6,2],[-7,-3],[-7,1],[-8,-2],[-8,-1],[-8,0]];
    break;

    case 62 : // Canadian Goose
    TblFig = [[-6,-4],[-6,-3],  [-5,-5],  [-4,-4],[-4,-2],[-4,1],[-4,2],[-4,3],  [-3,-4],[-3,-3],  [-2,-3],[-2,-1],[-2,1],[-2,2],[-2,4],  [-1,-2],[-1,-1],[-1,0],[-1,1],[-1,3],  [0,-2],[0,-1],  [1,-3],[1,-2],[1,1],[1,2],  [2,-3],[2,-2],[2,1],[2,2],  [3,1],[3,2],[3,4],  [4,-6],[4,-4],[4,4],[4,5],  [5,-5],[5,-6],[6,-5]];
    break;

    case 63 : // SuperMega Spaceship
    TblFig = [[-9,-1],[-9,0],[-9,1],  [-8,-1],[-8,2],[-8,3],[-8,4],  [-7,-1],[-7,0],[-7,1],[-7,2],[-7,3],  [-6,2],[-6,3],  [-5,-4],[-5,-5],  [-4,-3],[-4,-5],  [-3,-5],[-3,-3],[-3,-2],[-3,2],  [-2,-4],[-2,3],[-2,5],  [-1,-3],[-1,-2],[-1,-1],[-1,0],[-1,1],[-1,2],[-1,3],[-1,5],  [9,-1],[9,0],[9,1],  [8,-1],[8,2],[8,3],[8,4],  [7,-1],[7,0],[7,1],[7,2],[7,3],  [6,2],[6,3],  [5,-4],[5,-5],  [4,-3],[4,-5],  [3,-5],[3,-3],[3,-2],[3,2],  [2,-4],[2,3],[2,5],  [1,-3],[1,-2],[1,-1],[1,0],[1,1],[1,2],[1,3],[1,5]];
    break;

    case 64 : // Cthulhu
    TblFig = [[-5,-4],[-5,-5],  [-4,-6],[-4,-3],  [-3,-5],[-3,-4],[-3,-3],  [-2,0],  [-1,-5],[-1,-4],[-1,-3],[-1,-2],[-1,-1],[-1,0] ,  [0,-6],  [5,-4],[5,-5],  [4,-6],[4,-3],  [3,-5],[3,-4],[3,-3],  [2,0],  [1,-5],[1,-4],[1,-3],[1,-2],[1,-1],[1,0],    [-4,6],  [-3,1],[-3,2],[-3,4],[-3,5],[-3,6]  ,[-2,2],[-2,3],  [-1,5],[-1,6],  [0,2],[0,3],[0,4],[0,6],  [1,2],  [2,1]];
    break;


    case 70 : // 
    TblFig = [];
    break;

    case 71 : // 
    TblFig = [];
    break;






    default:
    TblFig = [];
    return (TblFig);


  }

  TblFig = RotFig(TblFig,rot);
  return (TblFig);
}

function RotFig (TblFig,rot) {
    var t;
    t = TblFig.length;

    for (var j=0; j<rot ; j++) {
        for (var i=0; i<t ; i++) {
            c = TblFig[i][0];
            TblFig[i][0] = TblFig[i][1];
            TblFig[i][1] = - c;
        }
    }

    return (TblFig);
}